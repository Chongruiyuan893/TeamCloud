{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "0.0.0.0",
  "parameters": {
    "projectId": {
      "type": "string"
    },
    "projectName": {
      "type": "string"
    },
    "deploymentZones": {
      "type": "array",
      "defaultValue": []
    }
  },
  "variables": {
    "teamCloudDeploymentOperatorRole": "[guid(subscription().subscriptionId, 'TeamCloud')]",
    "projectIdSanitized": "[tolower(parameters('projectId'))]",
    "projectResourceGroupName": "[concat('TeamCloud-', variables('projectIdSanitized'))]",
    "projectKeyVaultName": "[concat('kv', replace(variables('projectIdSanitized'), ' ', ''))]",
    "projectStorageName": "[concat('sa', replace(variables('projectIdSanitized'), ' ', ''))]"
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2018-01-01-preview",
      "name": "[variables('teamCloudDeploymentOperatorRole')]",
      "properties": {
        "roleName": "Key Vault Deployment Operator Role (TeamCloud)",
        "description": "Lets you deploy a resource manager template with the access to the secrets in the Key Vault.",
        "type": "customRole",
        "isCustom": true,
        "permissions": [
          {
            "actions": [ "Microsoft.KeyVault/vaults/deploy/action" ],
            "notActions": []
          }
        ],
        "assignableScopes": [
          "[subscription().id]"
        ]
      }
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2019-10-01",
      "location": "[deployment().location]",
      "name": "[variables('projectResourceGroupName')]",
      "tags": {
        "hidden-TeamCloud.ProjectId": "[parameters('projectId')]",
        "hidden-TeamCloud.ProjectName": "[parameters('projectName')]"
      },
      "properties": {
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[concat(deployment().name, '-project')]",
      "resourceGroup": "[variables('projectResourceGroupName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups/', variables('projectResourceGroupName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "projectId": {
            "value": "[variables('projectIdSanitized')]"
          },
          "deploymentZones": {
            "value": "[parameters('deploymentZones')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "projectId": {
              "type": "string"
            },
            "deploymentZones": {
              "type": "array"
            }
          },
          "variables": {
            "projectKeyVaultName": "[concat('kv', replace(parameters('projectId'), ' ', ''))]",
            "projectStorageName": "[concat('sa', replace(parameters('projectId'), ' ', ''))]"
          },
          "resources": [
            {
              "name": "[variables('projectStorageName')]",
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "location": "[resourceGroup().location]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
              }
            },
            {
              "name": "[variables('projectKeyVaultName')]",
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "accessPolicies": [],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true
              }
            },
            {
              "condition": "[not(empty(parameters('deploymentZones')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "[concat(deployment().name, '-', parameters('deploymentZones')[copyIndex()])]",
              "dependsOn": [
                "[variables('projectKeyVaultName')]",
                "[variables('projectStorageName')]"
              ],
              "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "parameters": {
                  "deploymentZones": {
                    "value": "[parameters('deploymentZones')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "deploymentZones": {
                      "type": "[parameters('deploymentZones')]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "name": "[parameters('deploymentZones')[copyIndex()]]",
                      "apiVersion": "2018-11-30",
                      "location": "[resourceGroup().location]"
                    }
                  ]
                }
              },
              "copy": {
                "name": "deploymentZonesCopy",
                "count": "[length(parameters('deploymentZones'))]"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "resourceId": {
      "type": "string",
      "value": "[concat(subscription().id, '/resourceGroups/', variables('projectResourceGroupName'))]"
    }
  }
}
