name: Create Release

on:
  workflow_dispatch:
    inputs:
      tag:
        required: false
        description: 'Tag to release.'
      reset_demo:
        default: 'false'
        required: true
        description: 'Reset the demo environment.'

jobs:
  build:
    # if: 'github.event.release.prerelease'
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Print event
        uses: actions/github-script@v3
        with:
          script: console.log(${{ github.event }})

      - name: Get Release
        id: get-release
        uses: actions/github-script@v3
        with:
          script: |
            let tag = '${{ github.event.inputs.tag }}'
            if (!tag) {
              const parts = context.ref.split('/');
              if (!parts.includes('tags'))
                throw new Error(`ref ${context.ref} is not a tag.`);
              tag = parts[parts.length - 1];
            }
            const release = await github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag
            });
            console.log(release.data);
            return release.data;

      - name: Get CLI Release Asset
        id: get-cli
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: |
            const release = JSON.parse('${{steps.get-release.outputs.result}}');
            const cli_asset = release.assets.find(a => a.browser_download_url.includes('py3-none-any.whl'));
            if (!cli_asset)
              throw new Error('Could not find cli wheel file in release assets');
            const cli_url = cli_asset.browser_download_url;
            console.log(cli_url);
            return cli_url;

      - name: Install TeamCloud CLI
        run: |
          echo '${{steps.get-cli.outputs.result}}'

          read -sp "Azure password: " AZ_PASS && echo && az login --service-principal -u ${{ secrets.TEAMCLOUD_CI_USERNAME }} -p ${{ secrets.TEAMCLOUD_CI_PASSWORD }} --tenant ${{ secrets.TEAMCLOUD_CI_TENANT }}

          az extension add -s ${{steps.get-cli.outputs.result}} -y
      # - name: Check Release
      #   uses: actions/github-script@v3
      #   with:
      #     script: |
      #       const release = JSON.parse('${{steps.get-release.outputs.result}}')
      #       console.log(release)
      #       console.log('...')
      #       console.log(release.id)
      # - name: Promote Release
      #   uses: actions/github-script@v3
      #   with:
      #     script: |
      #       const release_id = '${{steps.get-release.outputs.result}}'
      #       const release = await github.repos.updateRelease({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         release_id: release_id,
      #         prerelease: false
      #       });
      #       console.log(release.id);
      # - name: Deploy
      #   run: |
      #     read -sp "Azure password: " AZ_PASS && echo && az login --service-principal -u ${{ secrets.TEAMCLOUD_CI_USERNAME }} -p ${{ secrets.TEAMCLOUD_CI_PASSWORD }} --tenant ${{ secrets.TEAMCLOUD_CI_TENANT }}
      #     az extension add --source ... -y
      #     az tc deploy --subscription ${{ secrets.TEAMCLOUD_CI_SUBSCRIPTION }} -g ... --pre
      # - name: Trigger Publish
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{ secrets.TEAMCLOUD_PAT }}
      #     script: |
      #       github.actions.createWorkflowDispatch({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         workflow_id: 'release.yml',
      #         ref: 'v${{ steps.gitversion.outputs.majorMinorPatch }}',
      #       });
