/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const ProjectListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Project" } }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Project: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Project",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Composite",
          className: "ProjectType"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "Composite",
          className: "AzureResourceGroup"
        }
      },
      users: {
        serializedName: "users",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "User" } }
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      links: {
        serializedName: "_links",
        type: {
          name: "Composite",
          className: "ProjectReferenceLinks"
        }
      }
    }
  }
};

export const ProjectType: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectType",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      isDefault: {
        serializedName: "isDefault",
        type: {
          name: "Boolean"
        }
      },
      region: {
        serializedName: "region",
        type: {
          name: "String"
        }
      },
      subscriptions: {
        serializedName: "subscriptions",
        type: {
          name: "Sequence",
          element: { type: { name: "Uuid" } }
        }
      },
      subscriptionCapacity: {
        serializedName: "subscriptionCapacity",
        type: {
          name: "Number"
        }
      },
      resourceGroupNamePrefix: {
        serializedName: "resourceGroupNamePrefix",
        type: {
          name: "String"
        }
      },
      providers: {
        serializedName: "providers",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ProviderReference" }
          }
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ProviderReference: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderReference",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      dependsOn: {
        serializedName: "dependsOn",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const AzureResourceGroup: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceGroup",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "Uuid"
        }
      },
      region: {
        serializedName: "region",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const User: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "User",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      userType: {
        serializedName: "userType",
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      },
      projectMemberships: {
        serializedName: "projectMemberships",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ProjectMembership" }
          }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ProjectMembership: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectMembership",
    modelProperties: {
      projectId: {
        serializedName: "projectId",
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ProjectReferenceLinks: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectReferenceLinks",
    modelProperties: {
      self: {
        serializedName: "_self",
        type: {
          name: "Composite",
          className: "ReferenceLink"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ReferenceLink"
        }
      },
      users: {
        serializedName: "users",
        type: {
          name: "Composite",
          className: "ReferenceLink"
        }
      },
      links: {
        serializedName: "links",
        type: {
          name: "Composite",
          className: "ReferenceLink"
        }
      },
      offers: {
        serializedName: "offers",
        type: {
          name: "Composite",
          className: "ReferenceLink"
        }
      },
      components: {
        serializedName: "components",
        type: {
          name: "Composite",
          className: "ReferenceLink"
        }
      }
    }
  }
};

export const ReferenceLink: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReferenceLink",
    modelProperties: {
      href: {
        serializedName: "href",
        type: {
          name: "String"
        }
      },
      templated: {
        serializedName: "templated",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ErrorResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ResultError" } }
        }
      }
    }
  }
};

export const ResultError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResultError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ValidationError" } }
        }
      }
    }
  }
};

export const ValidationError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidationError",
    modelProperties: {
      field: {
        serializedName: "field",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectDefinition",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      projectType: {
        serializedName: "projectType",
        type: {
          name: "String"
        }
      },
      users: {
        serializedName: "users",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "UserDefinition" } }
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const UserDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserDefinition",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const StatusResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StatusResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      stateMessage: {
        serializedName: "stateMessage",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ResultError" } }
        }
      },
      trackingId: {
        serializedName: "_trackingId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "Project"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Component" } }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Component: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Component",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      href: {
        serializedName: "href",
        type: {
          name: "String"
        }
      },
      offerId: {
        serializedName: "offerId",
        type: {
          name: "String"
        }
      },
      projectId: {
        serializedName: "projectId",
        type: {
          name: "String"
        }
      },
      providerId: {
        serializedName: "providerId",
        type: {
          name: "String"
        }
      },
      requestedBy: {
        serializedName: "requestedBy",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      inputJson: {
        serializedName: "inputJson",
        type: {
          name: "String"
        }
      },
      valueJson: {
        serializedName: "valueJson",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentRequest",
    modelProperties: {
      offerId: {
        serializedName: "offerId",
        type: {
          name: "String"
        }
      },
      inputJson: {
        serializedName: "inputJson",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "Component"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectIdentityDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectIdentityDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "ProjectIdentity"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectIdentity: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectIdentity",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "Uuid"
        }
      },
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "Uuid"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StringDictionaryDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StringDictionaryDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectLink: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectLink",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      href: {
        serializedName: "href",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectLinkDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectLinkDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "ProjectLink"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentOfferListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentOfferListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ComponentOffer" } }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentOffer: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentOffer",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      providerId: {
        serializedName: "providerId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      inputJsonSchema: {
        serializedName: "inputJsonSchema",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentOfferDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentOfferDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "ComponentOffer"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProviderDataReturnResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderDataReturnResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "ProviderData"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProviderData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      isSecret: {
        serializedName: "isSecret",
        type: {
          name: "Boolean"
        }
      },
      isShared: {
        serializedName: "isShared",
        type: {
          name: "Boolean"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      dataType: {
        serializedName: "dataType",
        type: {
          name: "String"
        }
      },
      stringValue: {
        serializedName: "stringValue",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectTypeListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectTypeListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ProjectType" } }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectTypeDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectTypeDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "ProjectType"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "User" } }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "User"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProviderDataListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderDataListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ProviderData" } }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProviderListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Provider" } }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Provider: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Provider",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      authCode: {
        serializedName: "authCode",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "Uuid"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "Composite",
          className: "AzureResourceGroup"
        }
      },
      events: {
        serializedName: "events",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      eventSubscriptions: {
        serializedName: "eventSubscriptions",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ProviderEventSubscription" }
          }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      registered: {
        serializedName: "registered",
        type: {
          name: "DateTime"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      commandMode: {
        serializedName: "commandMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProviderEventSubscription: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderEventSubscription",
    modelProperties: {
      eventType: {
        serializedName: "eventType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProviderDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "Provider"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TeamCloudInstanceDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TeamCloudInstanceDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "TeamCloudInstance"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TeamCloudInstance: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TeamCloudInstance",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "Composite",
          className: "AzureResourceGroup"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      applications: {
        serializedName: "applications",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "TeamCloudApplication" }
          }
        }
      }
    }
  }
};

export const TeamCloudApplication: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TeamCloudApplication",
    modelProperties: {
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      type: {
        defaultValue: "Web",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "Composite",
          className: "AzureResourceGroup"
        }
      }
    }
  }
};
