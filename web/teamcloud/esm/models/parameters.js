/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { DeploymentScopeDefinition as DeploymentScopeDefinitionMapper, DeploymentScope as DeploymentScopeMapper, OrganizationDefinition as OrganizationDefinitionMapper, UserDefinition as UserDefinitionMapper, User as UserMapper, ProjectDefinition as ProjectDefinitionMapper, ProjectComponentDefinition as ProjectComponentDefinitionMapper, ProjectTemplateDefinition as ProjectTemplateDefinitionMapper, ProjectTemplate as ProjectTemplateMapper } from "../models/mappers";
export var accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export var $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var org = {
    parameterPath: "org",
    mapper: {
        serializedName: "org",
        required: true,
        type: {
            name: "String"
        }
    }
};
export var contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export var body = {
    parameterPath: ["options", "body"],
    mapper: DeploymentScopeDefinitionMapper
};
export var id = {
    parameterPath: "id",
    mapper: {
        serializedName: "id",
        required: true,
        type: {
            name: "String"
        }
    }
};
export var body1 = {
    parameterPath: ["options", "body"],
    mapper: DeploymentScopeMapper
};
export var body2 = {
    parameterPath: ["options", "body"],
    mapper: OrganizationDefinitionMapper
};
export var body3 = {
    parameterPath: ["options", "body"],
    mapper: UserDefinitionMapper
};
export var userId = {
    parameterPath: "userId",
    mapper: {
        serializedName: "userId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export var body4 = {
    parameterPath: ["options", "body"],
    mapper: UserMapper
};
export var body5 = {
    parameterPath: ["options", "body"],
    mapper: ProjectDefinitionMapper
};
export var projectId = {
    parameterPath: "projectId",
    mapper: {
        serializedName: "projectId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export var body6 = {
    parameterPath: ["options", "body"],
    mapper: ProjectComponentDefinitionMapper
};
export var componentId = {
    parameterPath: "componentId",
    mapper: {
        serializedName: "componentId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export var body7 = {
    parameterPath: ["options", "body"],
    mapper: {
        serializedName: "body",
        type: {
            name: "Dictionary",
            value: { type: { name: "String" } }
        }
    }
};
export var tagKey = {
    parameterPath: "tagKey",
    mapper: {
        serializedName: "tagKey",
        required: true,
        type: {
            name: "String"
        }
    }
};
export var body8 = {
    parameterPath: ["options", "body"],
    mapper: ProjectTemplateDefinitionMapper
};
export var projectTemplateId = {
    parameterPath: "projectTemplateId",
    mapper: {
        serializedName: "projectTemplateId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export var body9 = {
    parameterPath: ["options", "body"],
    mapper: ProjectTemplateMapper
};
export var trackingId = {
    parameterPath: "trackingId",
    mapper: {
        serializedName: "trackingId",
        required: true,
        type: {
            name: "Uuid"
        }
    }
};
//# sourceMappingURL=parameters.js.map