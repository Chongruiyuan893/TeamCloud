/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __extends } from "tslib";
import * as coreHttp from "@azure/core-http";
var packageName = "teamcloud";
var packageVersion = "1.0.0";
var TeamCloudContext = /** @class */ (function (_super) {
    __extends(TeamCloudContext, _super);
    /**
     * Initializes a new instance of the TeamCloudContext class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param $host server parameter
     * @param options The parameter options
     */
    function TeamCloudContext(credentials, $host, options) {
        var _this = this;
        if (credentials === undefined) {
            throw new Error("'credentials' cannot be null");
        }
        if ($host === undefined) {
            throw new Error("'$host' cannot be null");
        }
        // Initializing default values for options
        if (!options) {
            options = {};
        }
        if (!options.userAgent) {
            var defaultUserAgent = coreHttp.getDefaultUserAgentValue();
            options.userAgent = packageName + "/" + packageVersion + " " + defaultUserAgent;
        }
        if (!options.credentialScopes) {
            options.credentialScopes = ["openid"];
        }
        _this = _super.call(this, credentials, options) || this;
        _this.requestContentType = "application/json; charset=utf-8";
        _this.baseUri = options.endpoint || "{$host}";
        // Parameter assignments
        _this.$host = $host;
        return _this;
    }
    return TeamCloudContext;
}(coreHttp.ServiceClient));
export { TeamCloudContext };
//# sourceMappingURL=teamCloudContext.js.map